openapi: 3.0.0
info:
  title: Car Parking API
  version: 1.0.0
servers:
  - url: https://car-parking-api.test
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
paths:
  /api/v1/auth/register:
    post:
      tags:
        - default
      summary: auth/register
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Gavin
                email:
                  type: string
                  example: gkimpson@gmail.com
                password:
                  type: string
                  example: password
                password_confirmation:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/login:
    post:
      tags:
        - default
      summary: auth/login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: gkimpson@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/logout:
    post:
      tags:
        - default
      summary: auth/logout
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/vehicles:
    post:
      tags:
        - default
      summary: vehicles/store
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                reg_number:
                  type: string
                  example: AAA123
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - default
      summary: vehicles/show
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/parkings/start:
    post:
      tags:
        - default
      summary: parkings/start
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                vehicle_id:
                  type: integer
                  example: '1'
                zone_id:
                  type: integer
                  example: '2'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/parkings/1:
    get:
      tags:
        - default
      summary: parkings/show
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - default
      summary: parkings/stop
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                reg_number:
                  type: string
                  example: AAA123
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/vehicles/1:
    put:
      tags:
        - default
      summary: vehicles/update
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                reg_number:
                  type: string
                  example: GK10ABC
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - default
      summary: vehicles/delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/profile:
    get:
      tags:
        - default
      summary: profile/show
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - default
      summary: profile/update
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Gavin Kimpson
                email:
                  type: string
                  example: gkimpson@gmail.com
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/password:
    put:
      tags:
        - default
      summary: password/update
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  example: password12
                password:
                  type: string
                  example: password
                password_confirmation:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/zones:
    get:
      tags:
        - default
      summary: zones/index
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
